{"id":"../node_modules/ramda/src/constructN.js","dependencies":[{"name":"/Users/brian/Sites/dashboard/package.json","includedInParent":true,"mtime":1557967337000},{"name":"/Users/brian/Sites/dashboard/.babelrc","includedInParent":true,"mtime":1553892080000},{"name":"/Users/brian/Sites/dashboard/node_modules/ramda/package.json","includedInParent":true,"mtime":1557967283000},{"name":"./internal/_curry2","loc":{"line":1,"column":22},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/constructN.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_curry2.js"},{"name":"./curry","loc":{"line":2,"column":20},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/constructN.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/curry.js"},{"name":"./nAry","loc":{"line":3,"column":19},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/constructN.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/nAry.js"}],"generated":{"js":"var _curry2 = require('./internal/_curry2');\nvar curry = require('./curry');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      };\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map((ingredient) => (\n *          'Add a whollop of ' + ingredient, this.ingredients)\n *        )\n *        return R.join('\\n', instructions)\n *      }\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad)\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')\n *      console.log(salad.recipe());\n *      // Add a whollop of Mayonnaise\n *      // Add a whollop of Potato Chips\n *      // Add a whollop of Potato Ketchup\n */\nmodule.exports = _curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function() { return new Fn(); };\n  }\n  return curry(nAry(n, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case  1: return new Fn($0);\n      case  2: return new Fn($0, $1);\n      case  3: return new Fn($0, $1, $2);\n      case  4: return new Fn($0, $1, $2, $3);\n      case  5: return new Fn($0, $1, $2, $3, $4);\n      case  6: return new Fn($0, $1, $2, $3, $4, $5);\n      case  7: return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case  8: return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case  9: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ramda/src/constructN.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/ramda/src/constructN.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"../node_modules/ramda/src/constructN.js":"var _curry2 = require('./internal/_curry2');\nvar curry = require('./curry');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      };\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map((ingredient) => (\n *          'Add a whollop of ' + ingredient, this.ingredients)\n *        )\n *        return R.join('\\n', instructions)\n *      }\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad)\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')\n *      console.log(salad.recipe());\n *      // Add a whollop of Mayonnaise\n *      // Add a whollop of Potato Chips\n *      // Add a whollop of Potato Ketchup\n */\nmodule.exports = _curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function() { return new Fn(); };\n  }\n  return curry(nAry(n, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case  1: return new Fn($0);\n      case  2: return new Fn($0, $1);\n      case  3: return new Fn($0, $1, $2);\n      case  4: return new Fn($0, $1, $2, $3);\n      case  5: return new Fn($0, $1, $2, $3, $4);\n      case  6: return new Fn($0, $1, $2, $3, $4, $5);\n      case  7: return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case  8: return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case  9: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n"},"lineCount":63}},"error":null,"hash":"987524797f6804cf3518e736290c852d","cacheData":{"env":{}}}