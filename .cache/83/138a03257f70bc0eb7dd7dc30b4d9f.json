{"id":"../../node_modules/ramda/src/empty.js","dependencies":[{"name":"/Users/brian/Sites/dashboard/package.json","includedInParent":true,"mtime":1560188391000},{"name":"/Users/brian/Sites/dashboard/.babelrc","includedInParent":true,"mtime":1558727335000},{"name":"/Users/brian/Sites/dashboard/node_modules/ramda/package.json","includedInParent":true,"mtime":1557967283000},{"name":"./internal/_curry1","loc":{"line":1,"column":22},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/empty.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_curry1.js"},{"name":"./internal/_isArguments","loc":{"line":2,"column":27},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/empty.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_isArguments.js"},{"name":"./internal/_isArray","loc":{"line":3,"column":23},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/empty.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_isArray.js"},{"name":"./internal/_isObject","loc":{"line":4,"column":24},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/empty.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_isObject.js"},{"name":"./internal/_isString","loc":{"line":5,"column":24},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/empty.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_isString.js"}],"generated":{"js":"var _curry1 = require('./internal/_curry1');\nvar _isArguments = require('./internal/_isArguments');\nvar _isArray = require('./internal/_isArray');\nvar _isObject = require('./internal/_isObject');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nmodule.exports = _curry1(function empty(x) {\n  return (\n    (x != null && typeof x.empty === 'function') ?\n      x.empty() :\n    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n      x.constructor.empty() :\n    _isArray(x) ?\n      [] :\n    _isString(x) ?\n      '' :\n    _isObject(x) ?\n      {} :\n    _isArguments(x) ?\n      (function() { return arguments; }()) :\n    // else\n      void 0\n  );\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/src/empty.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/ramda/src/empty.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"../../node_modules/ramda/src/empty.js":"var _curry1 = require('./internal/_curry1');\nvar _isArguments = require('./internal/_isArguments');\nvar _isArray = require('./internal/_isArray');\nvar _isObject = require('./internal/_isObject');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nmodule.exports = _curry1(function empty(x) {\n  return (\n    (x != null && typeof x.empty === 'function') ?\n      x.empty() :\n    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n      x.constructor.empty() :\n    _isArray(x) ?\n      [] :\n    _isString(x) ?\n      '' :\n    _isObject(x) ?\n      {} :\n    _isArguments(x) ?\n      (function() { return arguments; }()) :\n    // else\n      void 0\n  );\n});\n"},"lineCount":48}},"error":null,"hash":"9e0bbfcc39a16e97fb1697942b783355","cacheData":{"env":{}}}