{"id":"../node_modules/ramda/src/init.js","dependencies":[{"name":"/Users/brian/Sites/dashboard/package.json","includedInParent":true,"mtime":1558713817000},{"name":"/Users/brian/Sites/dashboard/.babelrc","includedInParent":true,"mtime":1558547983000},{"name":"/Users/brian/Sites/dashboard/node_modules/ramda/package.json","includedInParent":true,"mtime":1557967283000},{"name":"./slice","loc":{"line":1,"column":20},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/init.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/slice.js"}],"generated":{"js":"var slice = require('./slice');\n\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nmodule.exports = slice(0, -1);\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ramda/src/init.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ramda/src/init.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"../node_modules/ramda/src/init.js":"var slice = require('./slice');\n\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nmodule.exports = slice(0, -1);\n"},"lineCount":29}},"error":null,"hash":"8c81b89d14ae1d9539317d13b3c40989","cacheData":{"env":{}}}