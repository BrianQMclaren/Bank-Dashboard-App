{"id":"../node_modules/truelayer-client/dist/src/v1/APIError.js","dependencies":[{"name":"/Users/brian/Sites/dashboard/package.json","includedInParent":true,"mtime":1558548601000},{"name":"/Users/brian/Sites/dashboard/.babelrc","includedInParent":true,"mtime":1558547983000},{"name":"/Users/brian/Sites/dashboard/node_modules/truelayer-client/package.json","includedInParent":true,"mtime":1558474506000},{"name":"request-promise/errors","loc":{"line":3,"column":25},"parent":"/Users/brian/Sites/dashboard/node_modules/truelayer-client/dist/src/v1/APIError.js","resolved":"/Users/brian/Sites/dashboard/node_modules/request-promise/errors.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_1 = require(\"request-promise/errors\");\n/**\n * Base class extending native errors\n *\n * @class ApiError\n * @extends {Error}\n */\nclass ApiError extends Error {\n    /**\n     * Creates an instance of ApiError.\n     *\n     * @param {Error} error\n     */\n    constructor(error) {\n        // Super call to Error\n        super(ApiError.getErrorResponse(error).error_description);\n        this.error = \"internal_error\";\n        // Generate error response object\n        this.error = ApiError.getErrorResponse(error).error;\n    }\n    /**\n     * Construct error response\n     *\n     * @param {string} code\n     * @param {string} description\n     * @returns {IError}\n     */\n    // tslint:disable-next-line:variable-name\n    static constructErrorResponse(error, error_description) {\n        return {\n            error,\n            error_description\n        };\n    }\n    /**\n     * Construct error response based on generic HTTP status code\n     *\n     * @param httpStatusCode\n     * @returns {string}\n     */\n    static genericHttpResponse(httpStatusCode) {\n        switch (httpStatusCode) {\n            case 400: return ApiError.constructErrorResponse(\"bad_request\", \"Bad request\");\n            case 401: return ApiError.constructErrorResponse(\"unauthorized\", \"Unauthorized\");\n            case 403: return ApiError.constructErrorResponse(\"forbidden\", \"Forbidden\");\n            case 404: return ApiError.constructErrorResponse(\"not_found\", \"Not Found\");\n            default: return ApiError.constructErrorResponse(\"internal_error\", \"Internal error\");\n        }\n    }\n    /**\n     * Construct error response object\n     *\n     * @param {Error} error\n     * @returns {IError}\n     */\n    static getErrorResponse(error) {\n        switch (error.constructor) {\n            case errors_1.StatusCodeError:\n                // The server responded with a status codes other than 2xx.\n                try {\n                    const errorResponse = JSON.parse(error.error);\n                    return errorResponse.error && errorResponse.error_description\n                        ? ApiError.constructErrorResponse(errorResponse.error, errorResponse.error_description)\n                        : ApiError.constructErrorResponse(errorResponse, errorResponse);\n                }\n                catch (e) {\n                    return ApiError.genericHttpResponse(error.statusCode);\n                }\n            case errors_1.RequestError:\n                // The request failed due to technical reasons.\n                const reqError = error.error;\n                return ApiError.constructErrorResponse(reqError.code, \"Error on `\" + reqError.syscall + \"`\");\n            default:\n                if (error.message === \"Invalid access token\") {\n                    return ApiError.constructErrorResponse(\"invalid_access_token\", \"Invalid access token.\");\n                }\n                return ApiError.constructErrorResponse(\"internal_error\", \"Well, this is embarrassing!\");\n        }\n    }\n}\nexports.ApiError = ApiError;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/truelayer-client/dist/src/v1/APIError.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}}],"sources":{"../node_modules/truelayer-client/dist/src/v1/APIError.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_1 = require(\"request-promise/errors\");\n/**\n * Base class extending native errors\n *\n * @class ApiError\n * @extends {Error}\n */\nclass ApiError extends Error {\n    /**\n     * Creates an instance of ApiError.\n     *\n     * @param {Error} error\n     */\n    constructor(error) {\n        // Super call to Error\n        super(ApiError.getErrorResponse(error).error_description);\n        this.error = \"internal_error\";\n        // Generate error response object\n        this.error = ApiError.getErrorResponse(error).error;\n    }\n    /**\n     * Construct error response\n     *\n     * @param {string} code\n     * @param {string} description\n     * @returns {IError}\n     */\n    // tslint:disable-next-line:variable-name\n    static constructErrorResponse(error, error_description) {\n        return {\n            error,\n            error_description\n        };\n    }\n    /**\n     * Construct error response based on generic HTTP status code\n     *\n     * @param httpStatusCode\n     * @returns {string}\n     */\n    static genericHttpResponse(httpStatusCode) {\n        switch (httpStatusCode) {\n            case 400: return ApiError.constructErrorResponse(\"bad_request\", \"Bad request\");\n            case 401: return ApiError.constructErrorResponse(\"unauthorized\", \"Unauthorized\");\n            case 403: return ApiError.constructErrorResponse(\"forbidden\", \"Forbidden\");\n            case 404: return ApiError.constructErrorResponse(\"not_found\", \"Not Found\");\n            default: return ApiError.constructErrorResponse(\"internal_error\", \"Internal error\");\n        }\n    }\n    /**\n     * Construct error response object\n     *\n     * @param {Error} error\n     * @returns {IError}\n     */\n    static getErrorResponse(error) {\n        switch (error.constructor) {\n            case errors_1.StatusCodeError:\n                // The server responded with a status codes other than 2xx.\n                try {\n                    const errorResponse = JSON.parse(error.error);\n                    return errorResponse.error && errorResponse.error_description\n                        ? ApiError.constructErrorResponse(errorResponse.error, errorResponse.error_description)\n                        : ApiError.constructErrorResponse(errorResponse, errorResponse);\n                }\n                catch (e) {\n                    return ApiError.genericHttpResponse(error.statusCode);\n                }\n            case errors_1.RequestError:\n                // The request failed due to technical reasons.\n                const reqError = error.error;\n                return ApiError.constructErrorResponse(reqError.code, \"Error on `\" + reqError.syscall + \"`\");\n            default:\n                if (error.message === \"Invalid access token\") {\n                    return ApiError.constructErrorResponse(\"invalid_access_token\", \"Invalid access token.\");\n                }\n                return ApiError.constructErrorResponse(\"internal_error\", \"Well, this is embarrassing!\");\n        }\n    }\n}\nexports.ApiError = ApiError;\n"},"lineCount":84}},"error":null,"hash":"0cc3bc7531cbfd5190b7fefce65c9ca2","cacheData":{"env":{}}}