{"id":"../../node_modules/ramda/src/evolve.js","dependencies":[{"name":"/Users/brian/Sites/dashboard/package.json","includedInParent":true,"mtime":1560188391000},{"name":"/Users/brian/Sites/dashboard/.babelrc","includedInParent":true,"mtime":1558727335000},{"name":"/Users/brian/Sites/dashboard/node_modules/ramda/package.json","includedInParent":true,"mtime":1557967283000},{"name":"./internal/_curry2","loc":{"line":1,"column":22},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/evolve.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_curry2.js"}],"generated":{"js":"var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nmodule.exports = _curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function'                 ? transformation(object[key])\n                : transformation && type === 'object' ? evolve(transformation, object[key])\n                                                      : object[key];\n  }\n  return result;\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/ramda/src/evolve.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"../../node_modules/ramda/src/evolve.js":"var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nmodule.exports = _curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function'                 ? transformation(object[key])\n                : transformation && type === 'object' ? evolve(transformation, object[key])\n                                                      : object[key];\n  }\n  return result;\n});\n"},"lineCount":43}},"error":null,"hash":"c742b530db4f6c259b32cbb51307772a","cacheData":{"env":{}}}