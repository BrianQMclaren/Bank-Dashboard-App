{"id":"../../node_modules/ramda/src/tryCatch.js","dependencies":[{"name":"/Users/brian/Sites/dashboard/package.json","includedInParent":true,"mtime":1560188391000},{"name":"/Users/brian/Sites/dashboard/.babelrc","includedInParent":true,"mtime":1558727335000},{"name":"/Users/brian/Sites/dashboard/node_modules/ramda/package.json","includedInParent":true,"mtime":1557967283000},{"name":"./internal/_arity","loc":{"line":1,"column":21},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/tryCatch.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_arity.js"},{"name":"./internal/_concat","loc":{"line":2,"column":22},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/tryCatch.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_concat.js"},{"name":"./internal/_curry2","loc":{"line":3,"column":22},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/tryCatch.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_curry2.js"}],"generated":{"js":"var _arity = require('./internal/_arity');\nvar _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nmodule.exports = _curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function() {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/ramda/src/tryCatch.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"../../node_modules/ramda/src/tryCatch.js":"var _arity = require('./internal/_arity');\nvar _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nmodule.exports = _curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function() {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n"},"lineCount":36}},"error":null,"hash":"301df1c4e98c7baa5501a6c0ba68807a","cacheData":{"env":{}}}