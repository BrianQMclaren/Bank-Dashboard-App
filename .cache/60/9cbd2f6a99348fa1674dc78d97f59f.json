{"id":"../node_modules/ramda/src/sequence.js","dependencies":[{"name":"/Users/brian/Sites/dashboard/package.json","includedInParent":true,"mtime":1557967337000},{"name":"/Users/brian/Sites/dashboard/.babelrc","includedInParent":true,"mtime":1553892080000},{"name":"/Users/brian/Sites/dashboard/node_modules/ramda/package.json","includedInParent":true,"mtime":1557967283000},{"name":"./internal/_curry2","loc":{"line":1,"column":22},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/sequence.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/internal/_curry2.js"},{"name":"./ap","loc":{"line":2,"column":17},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/sequence.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/ap.js"},{"name":"./map","loc":{"line":3,"column":18},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/sequence.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/map.js"},{"name":"./prepend","loc":{"line":4,"column":22},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/sequence.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/prepend.js"},{"name":"./reduceRight","loc":{"line":5,"column":26},"parent":"/Users/brian/Sites/dashboard/node_modules/ramda/src/sequence.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/src/reduceRight.js"}],"generated":{"js":"var _curry2 = require('./internal/_curry2');\nvar ap = require('./ap');\nvar map = require('./map');\nvar prepend = require('./prepend');\nvar reduceRight = require('./reduceRight');\n\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nmodule.exports = _curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ?\n    traversable.sequence(of) :\n    reduceRight(function(x, acc) { return ap(map(prepend, x), acc); },\n                of([]),\n                traversable);\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ramda/src/sequence.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/ramda/src/sequence.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"../node_modules/ramda/src/sequence.js":"var _curry2 = require('./internal/_curry2');\nvar ap = require('./ap');\nvar map = require('./map');\nvar prepend = require('./prepend');\nvar reduceRight = require('./reduceRight');\n\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nmodule.exports = _curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ?\n    traversable.sequence(of) :\n    reduceRight(function(x, acc) { return ap(map(prepend, x), acc); },\n                of([]),\n                traversable);\n});\n"},"lineCount":39}},"error":null,"hash":"e1cded43c00b3d258a40b629e868d518","cacheData":{"env":{}}}