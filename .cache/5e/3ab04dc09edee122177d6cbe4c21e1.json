{"id":"../node_modules/plaid/lib/wrapPromise.js","dependencies":[{"name":"/Users/brian/Sites/dashboard/package.json","includedInParent":true,"mtime":1558713817000},{"name":"/Users/brian/Sites/dashboard/.babelrc","includedInParent":true,"mtime":1558547983000},{"name":"/Users/brian/Sites/dashboard/node_modules/plaid/package.json","includedInParent":true,"mtime":1558710984000},{"name":"ramda","loc":{"line":3,"column":16},"parent":"/Users/brian/Sites/dashboard/node_modules/plaid/lib/wrapPromise.js","resolved":"/Users/brian/Sites/dashboard/node_modules/ramda/index.js"}],"generated":{"js":"'use strict';\n\nvar R = require('ramda');\n\n// (Promise, Callback, Options?) => Promise | void\n//\n// Options: { no_spread: bool }\n//   no_spread: prevents wrapPromise from applying array-like return arguments\n//              to the callback.\nvar wrapPromise = function(promise, cb, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (cb) {\n    return promise.then(function(args) {\n      if (R.isArrayLike(args) && !options.no_spread) {\n        // call outside of promise stack\n        setImmediate(function() {\n          R.apply(R.partial(cb, [null]), args);\n        });\n      } else {\n        setImmediate(function() {\n          cb(null, args);\n        });\n      }\n    }).catch(function(err) {\n      setImmediate(function() {\n        cb(err);\n      });\n    });\n  }\n  return promise;\n};\n\nmodule.exports = wrapPromise;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/plaid/lib/wrapPromise.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"../node_modules/plaid/lib/wrapPromise.js":"'use strict';\n\nvar R = require('ramda');\n\n// (Promise, Callback, Options?) => Promise | void\n//\n// Options: { no_spread: bool }\n//   no_spread: prevents wrapPromise from applying array-like return arguments\n//              to the callback.\nvar wrapPromise = function(promise, cb, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (cb) {\n    return promise.then(function(args) {\n      if (R.isArrayLike(args) && !options.no_spread) {\n        // call outside of promise stack\n        setImmediate(function() {\n          R.apply(R.partial(cb, [null]), args);\n        });\n      } else {\n        setImmediate(function() {\n          cb(null, args);\n        });\n      }\n    }).catch(function(err) {\n      setImmediate(function() {\n        cb(err);\n      });\n    });\n  }\n  return promise;\n};\n\nmodule.exports = wrapPromise;\n"},"lineCount":37}},"error":null,"hash":"cdc02c97dbfad9a4fcc9f726e37d6798","cacheData":{"env":{}}}