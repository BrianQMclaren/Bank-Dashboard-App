{"id":"../../node_modules/ramda/src/internal/_cloneRegExp.js","dependencies":[{"name":"/Users/brian/Sites/dashboard/package.json","includedInParent":true,"mtime":1560188391000},{"name":"/Users/brian/Sites/dashboard/.babelrc","includedInParent":true,"mtime":1558727335000},{"name":"/Users/brian/Sites/dashboard/node_modules/ramda/package.json","includedInParent":true,"mtime":1557967283000}],"generated":{"js":"module.exports = function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +\n                                    (pattern.ignoreCase ? 'i' : '') +\n                                    (pattern.multiline  ? 'm' : '') +\n                                    (pattern.sticky     ? 'y' : '') +\n                                    (pattern.unicode    ? 'u' : ''));\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/src/internal/_cloneRegExp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/src/internal/_cloneRegExp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/ramda/src/internal/_cloneRegExp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/ramda/src/internal/_cloneRegExp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/ramda/src/internal/_cloneRegExp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/ramda/src/internal/_cloneRegExp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/ramda/src/internal/_cloneRegExp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/ramda/src/internal/_cloneRegExp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}}],"sources":{"../../node_modules/ramda/src/internal/_cloneRegExp.js":"module.exports = function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +\n                                    (pattern.ignoreCase ? 'i' : '') +\n                                    (pattern.multiline  ? 'm' : '') +\n                                    (pattern.sticky     ? 'y' : '') +\n                                    (pattern.unicode    ? 'u' : ''));\n};\n"},"lineCount":8}},"error":null,"hash":"e939d5a8e2fb711f0c527acb6d5817ae","cacheData":{"env":{}}}